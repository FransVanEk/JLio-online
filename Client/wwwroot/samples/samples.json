[
  {
    "description": "This sample shows how a new object can be created. There is not need to start with an object for JLio. With the add command the object can be created. \n\nThe value can be anything, as long as it is a valid json notation. Even a function can be used . See samples with functions.",
    "model": {
      "inputObjects": [],
      "name": "Sample-1",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"newProperty\": {\n    \"new object\": \"Added by value\"\n  }\n}",
          "name": "myObject"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.myObject.newProperty\",\r\n    \"value\": {\r\n      \"new object\": \"Added by value\"\r\n    },\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Create a new object with add"
  },
  {
    "description": "This sample shows how a new property is added to an existing object. \nThe value can be anything, as long as it is a valid json notation. Even a function can be used . See samples with functions.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"initial\": \"value\"\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-2",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"initial\": \"value\",\n  \"newProperty\": {\n    \"new object\": \"Added by value\"\n  }\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.newProperty\",\r\n    \"value\": {\r\n      \"new object\": \"Added by value\"\r\n    },\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Add a property to an existing object. (value: object)"
  },
  {
    "description": "This sample shows how a new object can be created. There is not need to start with an object for JLio. With the add command the object can be created. In this case the value of tha add command didn't hold the entire object , but it uses the path notation to define the structure. \nIf an path element doesn't exist the path will be created. All path elements exect the last element will be objects, so they can contain the property for the child elements. The last property will be given the actual value in the add command\n\nThe value can be anything, as long as it is a valid json notation. Even a function can be used . See samples with functions.",
    "model": {
      "inputObjects": [],
      "name": "Sample-3",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"newProperty\": 2\n}",
          "name": "myObject"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.myObject.newProperty\",\r\n    \"value\": 2,\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Create a new object using the JSON-path notation"
  },
  {
    "description": "This sample shows how a property is set to new value\nThe value can be anything, as long as it is a valid json notation. Even a function can be used . \nSee samples with functions.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n  \"myProperty\": 2\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-4",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myProperty\": \"new value\"\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.myProperty\",\r\n    \"value\": \"new value\",\r\n    \"command\": \"set\"\r\n  }\r\n]"
    },
    "tags": [
      "set"
    ],
    "title": "Set property value on existing object"
  },
  {
    "description": "This sample shows how multiple properties are set to new value using the .. notation of Json-path.\nThe value can be anything, as long as it is a valid json notation. In this case a function is used.\n",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"myProperty\": \"A\"\r\n    },\r\n     \"myobject2\": {\r\n        \"myProperty\": \"B\"\r\n    }\r\n}",
          "name": "Sample"
        }
      ],
      "name": "Sample-5",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"myProperty\": \"086b0672-9a1a-45dc-bc19-2a46e00fc74c\"\n  },\n  \"myobject2\": {\n    \"myProperty\": \"1ff73f04-db53-4cf5-99f8-dfed38357413\"\n  }\n}",
          "name": "Sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$..myProperty\",\r\n    \"value\": \"=newGuid()\",\r\n    \"command\": \"set\"\r\n  }\r\n]"
    },
    "tags": [
      "set"
    ],
    "title": "Set multiple properties with one set command (value:function)"
  },
  {
    "description": "This sample shows how to add a property to all items in an existing array. \nAll array items get the new property with the JSON-path notation [*]. ",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myArray\": [\r\n        {\r\n            \"myItem\": 1\r\n        },\r\n        {\r\n            \"myItem\": 2\r\n        },\r\n        {\r\n            \"myItem\": 3\r\n        }\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-6",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myArray\": [\n    {\n      \"myItem\": 1,\n      \"newProperty\": \"new\"\n    },\n    {\n      \"myItem\": 2,\n      \"newProperty\": \"new\"\n    },\n    {\n      \"myItem\": 3,\n      \"newProperty\": \"new\"\n    }\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.myArray[*].newProperty\",\r\n    \"value\": \"new\",\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Add a property to items in an array"
  },
  {
    "description": "This sample shows how to set a property to an item in an existing array. Not all array items get the new property due to the JSON-path notation [?(@.myItem==2)].",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myArray\": [\r\n        {\r\n            \"myItem\": 1\r\n        },\r\n        {\r\n            \"myItem\": 2\r\n        },\r\n        {\r\n            \"myItem\": 3\r\n        }\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-7",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myArray\": [\n    {\n      \"myItem\": 1\n    },\n    {\n      \"myItem\": \"two\"\n    },\n    {\n      \"myItem\": 3\n    }\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.myArray[?(@.myItem==2)].myItem\",\r\n    \"value\": \"two\",\r\n    \"command\": \"set\"\r\n  }\r\n]"
    },
    "tags": [
      "set"
    ],
    "title": "Set a property value to an item in an array using a filter"
  },
  {
    "description": "This sample shows how to add a value to an existing array. The value can be a valid JSON notation. Even a function as a string is allowed. \nThe command execution will add the value to the end of the existing array.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myArray\": [\r\n        1,\r\n        2,\r\n        3\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-8",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myArray\": [\n    1,\n    2,\n    3,\n    4\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.myArray\",\r\n    \"value\": 4,\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Add a value to an array"
  },
  {
    "description": "The array wil replaced with the value of the set command when the whole array is targeted with the path. The property to which the path points, in this case holds an array, will get the new value.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myArray\": [\r\n        {\r\n            \"myItem\": 1\r\n        },\r\n        {\r\n            \"myItem\": 2\r\n        },\r\n        {\r\n            \"myItem\": 3\r\n        }\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-9",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myArray\": \"new\"\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.myArray\",\r\n    \"value\": \"new\",\r\n    \"command\": \"set\"\r\n  }\r\n]"
    },
    "tags": [
      "set"
    ],
    "title": "Set a property value to an array"
  },
  {
    "description": "With the copy command a new object can be created using the Json-Path notation in the toPath property.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"myProperty\": \"A\"\r\n    }\r\n}",
          "name": "Sample"
        }
      ],
      "name": "Sample-10",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"myProperty\": \"A\"\n  }\n}",
          "name": "Sample"
        },
        {
          "jsonString": "\"A\"",
          "name": "newResult"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.Sample.myobject.myProperty\",\n    \"toPath\": \"$.newResult\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "copy"
    ],
    "title": "Copy part of object to a new object"
  },
  {
    "description": "With the copy command a new object can be created using the Json-Path notation in the toPath property. The source reference will be removed. This can leave an object without any properties as shown in the example",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"myProperty\": \"A\"\r\n    }\r\n}",
          "name": "Sample"
        }
      ],
      "name": "Sample-11",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {}\n}",
          "name": "Sample"
        },
        {
          "jsonString": "\"A\"",
          "name": "newResult"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.Sample.myobject.myProperty\",\n    \"toPath\": \"$.newResult\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "move"
    ],
    "title": "move part of object to a new object"
  },
  {
    "description": "With the move command a element can be added to an array. If the destination is an Array the selected item(s) are added to the existing array. the source elements will be removed.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"myProperty\": \"C\"\r\n    },\r\n    \"myArray\": [\r\n        \"A\",\r\n        \"B\"\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-12",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"myProperty\": \"C\"\n  },\n  \"myArray\": [\n    \"A\",\n    \"B\",\n    \"C\"\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.myProperty\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "copy"
    ],
    "title": "copy part of object to an array"
  },
  {
    "description": "With the move command a element can be added to an array. If the destination is an Array the selected item(s) are added to the existing array. the source elements will be removed.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"myProperty\": \"C\"\r\n    },\r\n    \"myArray\": [\r\n        \"A\",\r\n        \"B\"\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-13",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {},\n  \"myArray\": [\n    \"A\",\n    \"B\",\n    \"C\"\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.myProperty\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "move"
    ],
    "title": "Move part of object to an array"
  },
  {
    "description": "The move command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Move items out an array into an existing array as separate items.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-14",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {},\n  \"myArray\": [\n    1,\n    2,\n    [\n      3,\n      4,\n      5,\n      6,\n      7\n    ]\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "move"
    ],
    "title": "Move items out an array into an existing array as single item."
  },
  {
    "description": "The move command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Move items out an array into an existing array as separate items.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-15",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {},\n  \"myArray\": [\n    1,\n    2,\n     3,\n      4,\n      5,\n      6,\n      7\n     ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource[*]\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "move"
    ],
    "title": "Move items out an array into an existing array as separate items."
  },
  {
    "description": "The copy command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Copy items out an array into an existing array as separate items.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-16",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\n  \"myArray\": [\n    1,\n    2,\n    [\n      3,\n      4,\n      5,\n      6,\n      7\n    ]\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "copy"
    ],
    "title": "Copy items out an array into an existing array as single item."
  },
  {
    "description": "The copy command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Copy items out an array into an existing array as separate items.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-17",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\n  \"myArray\": [\n    1,\n    2,\n      3,\n      4,\n      5,\n      6,\n      7\n     ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource[*]\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "copy"
    ],
    "title": "Copy items out an array into an existing array as separate items."
  },
  {
    "description": "The copy command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Copy items out an array into an existing array as single item.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-18",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"mySource\": [\n      3,\n      4,\n      5,\n      6,\n      7\n    ]\n  },\n  \"myArray\": [\n    1,\n    2,\n    3,\n    4,\n    5\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource[?(@ <6 )]\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "copy"
    ],
    "title": "Copy items out an array into an existing array as separate items with a filter."
  },
  {
    "description": "The move command will take the sources  by the toPath property and place it into a array. This means that if the source is an array, this array will be added to the designation array as one item. If the arrays should be merged use the [*] notation.\nSee sample: Move items out an array into an existing array as single item.",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  [3,4,5,6,7]\r\n    },\r\n    \"myArray\": [\r\n        1,\r\n        2\r\n    ]\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-19",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"mySource\": [\n      6,\n      7\n    ]\n  },\n  \"myArray\": [\n    1,\n    2,\n    3,\n    4,\n    5\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"fromPath\": \"$.sample.myobject.mySource[?(@ <6 )]\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "move"
    ],
    "title": "Move items out an array into an existing array as separate items with a filter."
  },
  {
    "description": "The copy command can create a new object using the JSON-Path notation on the \"toPath\" property. But if the target doesn't exist, the target will get the value of the source. When a single item is selected, the target will not be an array but the same single item. \nTo add a copied value into an non existing array, the array needs to be created before the copy. ",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  3\r\n    }\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-20",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"mySource\": 3\n  },\n  \"myArray\": [\n    3\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"path\": \"$.sample.myArray\",\n    \"value\": [],\n    \"command\": \"add\"\n  },\n  {\n    \"fromPath\": \"$.sample.myobject.mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "add",
      "copy"
    ],
    "title": "Copy singe value as an array when array doesn't exist"
  },
  {
    "description": "The move command can create a new object using the JSON-Path notation on the \"toPath\" property. But if the target doesn't exist, the target will get the value of the source. When a single item is selected, the target will not be an array but the same single item. \nTo add a moved value into an non existing array, the array needs to be created before the move. ",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\":  3\r\n    }\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-21",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {},\n  \"myArray\": [\n    3\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"path\": \"$.sample.myArray\",\n    \"value\": [],\n    \"command\": \"add\"\n  },\n  {\n    \"fromPath\": \"$.sample.myobject.mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "add",
      "move"
    ],
    "title": "Move singe value as an array when array doesn't exist"
  },
  {
    "description": "The move command can create a new object using the JSON-Path notation on the \"toPath\" property. But if the target doesn't exist, the target will get the value of the source. When a multiple items are selected, the target will \n add the value one after the other not creating an array. \nTo add a moved values into an non existing array, the array needs to be created before the move. ",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\": 1\r\n    },\r\n    \"myobject2\": {\r\n        \"mySource\": 2\r\n    }\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-22",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {},\n  \"myobject2\": {},\n  \"myArray\": [\n    1,\n    2\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"path\" : \"$.sample.myArray\",\n    \"value\" : [],\n    \"command\" : \"add\"\n  },\n  {\n    \"fromPath\": \"$..mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"move\"\n  }\n]"
    },
    "tags": [
      "add",
      "move"
    ],
    "title": "Move multiple values as an array when array doesn't exist"
  },
  {
    "description": "The copy command can create a new object using the JSON-Path notation on the \"toPath\" property. But if the target doesn't exist, the target will get the value of the source. When a multiple items are selected, the target will \n add the value one after the other not creating an array. \nTo add a copied values into an non existing array, the array needs to be created before the move. ",
    "model": {
      "inputObjects": [
        {
          "jsonString": "{\r\n    \"myobject\": {\r\n        \"mySource\": 1\r\n    },\r\n    \"myobject2\": {\r\n        \"mySource\": 2\r\n    }\r\n}",
          "name": "sample"
        }
      ],
      "name": "Sample-23",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myobject\": {\n    \"mySource\": 1\n  },\n  \"myobject2\": {\n    \"mySource\": 2\n  },\n  \"myArray\": [\n    1,\n    2\n  ]\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"path\" : \"$.sample.myArray\",\n    \"value\" : [],\n    \"command\" : \"add\"\n  },\n  {\n    \"fromPath\": \"$..mySource\",\n    \"toPath\": \"$.sample.myArray\",\n    \"command\": \"copy\"\n  }\n]"
    },
    "tags": [
      "add",
      "copy"
    ],
    "title": "Copy multiple values as an array when array doesn't exist"
  },
  {
    "description": "samples of the datetime function",
    "model": {
      "inputObjects": [],
      "name": "Sample-24",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"date\": \"2021-12-08T19:25:25.323Z\",\n  \"dateUTC\": \"2021-12-08T18:25:25.325Z\",\n  \"dateStartOfDay\": \"2021-12-08T00:00:00Z\",\n  \"dateStartOfDayUTC\": \"2021-12-08T00:00:00Z\",\n  \"dateFormat\": \"08-12-21 19:25\",\n  \"dateUTCFormat\": \"08-12-21 18:25\",\n  \"dateStartOfDayFormat\": \"08-12-21 00:00\",\n  \"dateStartOfDayUTCFormat\": \"08-12-21 00:00\"\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\r\n  {\r\n    \"path\": \"$.sample.date\",\r\n    \"value\": \"=datetime()\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateUTC\",\r\n    \"value\": \"=datetime(UTC)\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateStartOfDay\",\r\n    \"value\": \"=datetime(startOfDay)\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateStartOfDayUTC\",\r\n    \"value\": \"=datetime(startOfDayUTC)\",\r\n    \"command\": \"add\"\r\n  },\r\n    {\r\n    \"path\": \"$.sample.dateFormat\",\r\n    \"value\": \"=datetime('dd-MM-yy HH:mm')\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateUTCFormat\",\r\n    \"value\": \"=datetime(UTC,'dd-MM-yy HH:mm')\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateStartOfDayFormat\",\r\n    \"value\": \"=datetime(startOfDay,'dd-MM-yy HH:mm')\",\r\n    \"command\": \"add\"\r\n  },\r\n  {\r\n    \"path\": \"$.sample.dateStartOfDayUTCFormat\",\r\n    \"value\": \"=datetime(startOfDayUTC,'dd-MM-yy HH:mm')\",\r\n    \"command\": \"add\"\r\n  }\r\n]"
    },
    "tags": [
      "add"
    ],
    "title": "Function DateTime"
  },
  {
    "description": "sample to create a guid and add it to a new object",
    "model": {
      "inputObjects": [],
      "name": "Sample-25",
      "OutputObjects": [
        {
          "jsonString": "{\n  \"myGuid\": \"a1b16cc8-3cb8-4877-8592-1725efbd71e4\"\n}",
          "name": "sample"
        }
      ],
      "scriptText": "[\n  {\n    \"path\": \"$.sample.myGuid\",\n    \"value\": \"=newGuid()\",\n    \"command\": \"add\"\n  }\n]"
    },
    "tags": [
      "add"
    ],
    "title": "function newGuid()"
  }
]